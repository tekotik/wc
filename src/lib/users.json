'use client';

import { ElsenderLogo } from "@/components/icons";
import { Button } from "@/components/ui/button";
import {
  Card,
  CardContent,
  CardDescription,
  CardHeader,
  CardTitle,
} from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Label } from "@/components/ui/label";
import Link from "next/link";
import { User, KeyRound, Loader2 } from "lucide-react";
import { useRouter } from "next/navigation";
import { useToast } from "@/hooks/use-toast";
import React, { useState, useEffect } from 'react';
import { login } from './actions';
import { getSessionUser } from "./actions";

function LoginForm() {
  const { toast } = useToast();
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [isSubmitting, setIsSubmitting] = useState(false);

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setIsSubmitting(true);
    const response = await login({ email, password });
    if (response.success) {
      toast({ title: response.message });
      // Full page reload to ensure session is picked up
      window.location.href = '/dashboard'; 
    } else {
      toast({ variant: 'destructive', title: 'Ошибка входа', description: response.message });
      setIsSubmitting(false);
    }
  };

  return (
    <>
      <CardHeader>
        <div className="flex items-center justify-center gap-2 mb-4">
          <ElsenderLogo className="w-8 h-8 text-primary" />
          <h1 className="text-2xl font-bold font-headline text-primary">Elsender</h1>
        </div>
        <CardTitle className="text-2xl text-center font-headline">Войти в аккаунт</CardTitle>
        <CardDescription className="text-center">
            Введите <code className="bg-muted px-1.5 py-1 rounded-sm">admin@example.com</code> и пароль <code className="bg-muted px-1.5 py-1 rounded-sm">password</code>
        </CardDescription>
      </CardHeader>
      <CardContent>
        <form onSubmit={handleSubmit}>
          <div className="grid gap-4">
            <div className="grid gap-2">
              <Label htmlFor="email"><User className="inline-block mr-2 h-4 w-4" />Email</Label>
              <Input id="email" type="email" placeholder="m@example.com" required value={email} onChange={(e) => setEmail(e.target.value)} />
            </div>
            <div className="grid gap-2">
              <div className="flex items-center">
                <Label htmlFor="password"><KeyRound className="inline-block mr-2 h-4 w-4" />Пароль</Label>
              </div>
              <Input id="password" type="password" required value={password} onChange={(e) => setPassword(e.target.value)} />
            </div>
            <Button type="submit" className="w-full" disabled={isSubmitting}>
              {isSubmitting && <Loader2 className="mr-2 h-4 w-4 animate-spin" />}
              Войти
            </Button>
          </div>
        </form>
      </CardContent>
    </>
  );
}


export default function LoginPage() {
  const router = useRouter();
  const [isLoading, setIsLoading] = useState(true);
  const [user, setUser] = useState(null);

  useEffect(() => {
    getSessionUser().then(sessionUser => {
      if (sessionUser) {
        router.push('/dashboard');
      } else {
        setUser(null);
        setIsLoading(false);
      }
    });
  }, [router]);

  if (isLoading) {
    return (
      <div className="flex items-center justify-center min-h-screen">
        <Loader2 className="h-8 w-8 animate-spin" />
      </div>
    );
  }

  return (
    <div className="flex items-center justify-center min-h-screen bg-background">
      <Card className="mx-auto max-w-sm w-full">
        <LoginForm />
      </Card>
    </div>
  );
}